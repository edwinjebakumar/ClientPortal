@model List<FormAssignmentViewModel>
@{
    ViewData["Title"] = $"{ViewBag.ClientName}'s Dashboard";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex align-items-center">
                <h2 class="mb-0">@ViewBag.ClientName's Dashboard</h2>
                <span class="badge bg-primary ms-3">@Model.Count Forms</span>
            </div>
            <p class="text-muted mt-2 mb-0">View and manage assigned forms</p>
        </div>
        <div class="col text-end">
            <a href="@Url.Action("ClientsManagement", "Admin")" class="btn btn-secondary">
                <i class="bi bi-arrow-left me-2"></i>Back to Clients
            </a>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        @if (Model.Any())
        {
            @foreach (var form in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                <h5 class="card-title mb-0">@form.TemplateName</h5>
                                <span class="badge bg-@GetStatusBadgeColor(form.Status)">@form.Status</span>
                            </div>
                            
                @if (!string.IsNullOrEmpty(form.Description))
                            {
                                <p class="card-text text-muted mb-3">@form.Description</p>
                            }

                            @if (form.LastSubmissionDate.HasValue)
                            {
                                <p class="card-text">
                                    <small class="text-muted">
                                        Last submitted: @form.LastSubmissionDate.Value.ToShortDateString()
                                    </small>
                                </p>
                            }                            <p class="card-text">
                                <small class="text-muted">
                                    <i class="bi bi-calendar me-1"></i>
                                    Assigned on @form.AssignedAt.ToString("MMM dd, yyyy")
                                </small>
                            </p>

                            <div class="d-flex justify-content-between gap-2 mt-3">
                                <a href="@Url.Action("FillForm", "Client", new { assignmentId = form.Id })" 
                                   class="btn btn-primary flex-grow-1">
                                    <i class="bi bi-pencil-square"></i> Fill Form
                                </a>
                                <a href="@Url.Action("ViewSubmissions", "Client", new { assignmentId = form.Id })" 
                                   class="btn btn-outline-info flex-grow-1">
                                    <i class="bi bi-clock-history"></i> View History
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col">
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-clipboard-x display-4 text-muted mb-3"></i>
                        <h5>No Forms Assigned</h5>
                        <p class="text-muted mb-0">This client has no forms assigned yet.</p>
                        @if (User.IsInRole("Admin"))
                        {
                            <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#assignFormModal">
                                <i class="bi bi-plus-circle me-2"></i>Assign New Form
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@if (User.IsInRole("Admin"))
{
    <!-- Assign Form Modal -->
    <div class="modal fade" id="assignFormModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="AssignForm" asp-controller="Admin" method="post" class="needs-validation" novalidate>
                    <input type="hidden" name="clientId" value="@ViewBag.ClientId" />
                    
                    <div class="modal-header">
                        <h5 class="modal-title">
                            <i class="bi bi-clipboard-plus me-2"></i>Assign New Form
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="formTemplateId" class="form-label required">Select Form Template</label>
                            <select class="form-select" id="formTemplateId" name="formTemplateId" required>
                                <option value="">Choose a template...</option>
                                @foreach (var template in ViewBag.AvailableTemplates ?? new List<FormTemplateViewModel>())
                                {
                                    <option value="@template.TemplateId">@template.Name</option>
                                }
                            </select>
                            <div class="invalid-feedback">
                                Please select a form template
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="notes" class="form-label">Notes (Optional)</label>
                            <textarea class="form-control" id="notes" name="notes" rows="3"></textarea>
                        </div>
                    </div>
                    
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check2-circle me-2"></i>Assign Form
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}

@functions {
    private string GetStatusBadgeColor(string status)
    {
        return status?.ToLower() switch
        {
            "completed" => "success",
            "in progress" => "warning",
            "pending" => "info",
            _ => "secondary"
        };
    }
}
