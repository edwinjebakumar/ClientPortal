@model List<ClientViewModel>

@{
    ViewData["Title"] = "Clients Management";
}

<div class="container">
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex align-items-center">
                <h2 class="mb-0">Clients Management</h2>
                <span class="badge bg-secondary ms-3">@Model.Count Clients</span>
            </div>
        </div>
        <div class="col text-end">
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addClientModal">
                <i class="bi bi-plus-circle me-2"></i>Add New Client
            </button>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Client Name</th>
                                <th style="width: 150px">Assigned Forms</th>
                                <th style="width: 250px">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var client in Model)
                            {
                                <tr>
                                    <td class="align-middle">
                                        <span class="fw-medium">@client.Name</span>
                                    </td>
                                    <td class="align-middle text-center">
                                        <span class="badge bg-info">@client.AssignedFormsCount Forms</span>
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="@Url.Action("ClientDashboard", "Client", new { id = client.Id })" 
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-grid-3x3-gap-fill me-1"></i>View Dashboard
                                            </a>
                                            <button type="button" 
                                                    class="btn btn-outline-secondary btn-sm" 
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#editClientModal" 
                                                    data-client-id="@client.Id" 
                                                    data-client-name="@client.Name">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button type="button"
                                                    class="btn btn-outline-danger btn-sm"
                                                    onclick="confirmDelete(@client.Id, '@client.Name')"
                                                    title="Delete Client">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-people display-4 text-muted mb-3"></i>
                    <h5>No Clients Found</h5>
                    <p class="text-muted mb-0">Start by adding your first client</p>
                    <button type="button" class="btn btn-primary mt-3" data-bs-toggle="modal" data-bs-target="#addClientModal">
                        <i class="bi bi-plus-circle me-2"></i>Add New Client
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Add Client Modal -->
<div class="modal fade" id="addClientModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateClient" asp-controller="Admin" method="post" class="needs-validation" novalidate>                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-person-plus me-2"></i>Add New Client
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="newClientName" class="form-label required">Client Name</label>
                        <input type="text" class="form-control" id="newClientName" name="name" required
                               minlength="2" maxlength="100">
                        <div class="invalid-feedback">
                            Please enter a valid client name (2-100 characters)
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-plus-circle me-2"></i>Add Client
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Client Modal -->
<div class="modal fade" id="editClientModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="UpdateClient" asp-controller="Admin" method="post" class="needs-validation" novalidate>
                <input type="hidden" id="editClientId" name="id">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-pencil-square me-2"></i>Edit Client
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editClientName" class="form-label required">Client Name</label>
                        <input type="text" class="form-control" id="editClientName" name="name" required
                               minlength="2" maxlength="100">
                        <div class="invalid-feedback">
                            Please enter a valid client name (2-100 characters)
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check2-circle me-2"></i>Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="mb-0">Are you sure you want to delete the client "<strong><span id="clientNameToDelete"></span></strong>"?</p>
                <p class="text-danger mb-0"><small>This action cannot be undone.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="DeleteClient" asp-controller="Admin" method="post" class="d-inline">
                    <input type="hidden" id="deleteClientId" name="id">
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-2"></i>Delete Client
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Handle edit client modal
        var editClientModal = document.getElementById('editClientModal');
        editClientModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var clientId = button.getAttribute('data-client-id');
            var clientName = button.getAttribute('data-client-name');
            
            var idInput = editClientModal.querySelector('#editClientId');
            var nameInput = editClientModal.querySelector('#editClientName');
            
            idInput.value = clientId;
            nameInput.value = clientName;
        });

        // Handle delete confirmation
        function confirmDelete(clientId, clientName) {
            document.getElementById('deleteClientId').value = clientId;
            document.getElementById('clientNameToDelete').textContent = clientName;
            var modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            modal.show();
        }

        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })();
    </script>
}

@section Styles {
    <style>
        .required:after {
            content: "*";
            color: #dc3545;
            margin-left: 4px;
        }
    </style>
}
