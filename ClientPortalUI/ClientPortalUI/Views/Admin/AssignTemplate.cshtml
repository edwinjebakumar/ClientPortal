@model TemplateAssignmentViewModel
@{
    ViewData["Title"] = "Assign Template";
}

<div class="container-fluid mt-4">
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-0">Assign Template</h2>
                    <p class="text-muted mb-0">Assign "@Model.TemplateName" to clients</p>
                </div>
                <div>
                    <a asp-action="FormTemplates" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Templates
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <form asp-action="AssignTemplate" method="post" class="needs-validation" novalidate>
                        <input type="hidden" asp-for="FormTemplateId" />
                        <input type="hidden" asp-for="TemplateName" />

                        <div class="mb-4">
                            <label class="form-label required">Select Clients</label>
                            <div class="client-list">
                                @foreach (var client in Model.AvailableClients)
                                {
                                    <div class="form-check mb-2">
                                        <input type="checkbox" class="form-check-input" name="SelectedClientIds" value="@client.Id" id="client_@client.Id" />
                                        <label class="form-check-label" for="client_@client.Id">
                                            @client.Name
                                            <span class="text-muted small">(@client.AssignedFormsCount forms assigned)</span>
                                        </label>
                                    </div>
                                }
                            </div>
                            <div class="invalid-feedback">Please select at least one client</div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Notes" class="form-label">Assignment Notes</label>
                            <textarea asp-for="Notes" class="form-control" rows="3" 
                                    placeholder="Enter any notes about this assignment (optional)"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle me-2"></i>Assign Template
                            </button>
                            <a asp-action="FormTemplates" class="btn btn-secondary">
                                <i class="bi bi-x-circle me-2"></i>Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Assignment Tips</h5>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mb-0">
                        <li class="mb-3">
                            <i class="bi bi-info-circle text-primary me-2"></i>
                            You can assign this template to multiple clients at once
                        </li>
                        <li class="mb-3">
                            <i class="bi bi-info-circle text-primary me-2"></i>
                            Notes will be visible to clients when they view the form
                        </li>
                        <li>
                            <i class="bi bi-info-circle text-primary me-2"></i>
                            Clients will be notified when forms are assigned to them
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .required:after {
            content: " *";
            color: red;
        }
        .client-list {
            max-height: 400px;
            overflow-y: auto;
            border: 1px solid #dee2e6;
            border-radius: 0.25rem;
            padding: 1rem;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize form validation
            const form = document.querySelector('.needs-validation');
            form.addEventListener('submit', function(event) {
                if (!document.querySelector('input[name="SelectedClientIds"]:checked')) {
                    event.preventDefault();
                    event.stopPropagation();
                    document.querySelector('.client-list').classList.add('border-danger');
                    document.querySelector('.invalid-feedback').style.display = 'block';
                } else {
                    document.querySelector('.client-list').classList.remove('border-danger');
                    document.querySelector('.invalid-feedback').style.display = 'none';
                }
            }, false);
            
            // Add "Select All" functionality
            const selectAllBtn = document.getElementById('selectAllClients');
            if (selectAllBtn) {
                selectAllBtn.addEventListener('click', function() {
                    const checkboxes = document.querySelectorAll('input[name="SelectedClientIds"]');
                    const selectAll = !this.classList.contains('active');
                    checkboxes.forEach(checkbox => checkbox.checked = selectAll);
                    this.classList.toggle('active');
                });
            }
        });
    </script>
}
