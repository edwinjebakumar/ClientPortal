@model RegisterViewModel
@{
    ViewData["Title"] = "Create User";
}

<h1 class="text-center mb-4">@ViewData["Title"]</h1>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">                <form id="registerForm" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                    <div class="form-floating mb-3">
                        <input asp-for="UserName" class="form-control" autocomplete="username" aria-required="true" placeholder="username" />
                        <label asp-for="UserName">Username</label>
                        <span asp-validation-for="UserName" class="text-danger"></span>
                        <div id="usernameAvailability" class="form-text"></div>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Email" class="form-control" autocomplete="email" aria-required="true" placeholder="name@example.com" />
                        <label asp-for="Email">Email</label>
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                        <label asp-for="Password">Password</label>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>                    <div class="form-floating mb-3">
                        <input asp-for="ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                        <label asp-for="ConfirmPassword">Confirm Password</label>
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <select asp-for="Role" asp-items="Model.AvailableRoles" class="form-select" aria-required="true">
                            <option value="">Select a role</option>
                        </select>
                        <label asp-for="Role">Role</label>
                        <span asp-validation-for="Role" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <select asp-for="ClientId" asp-items="Model.AvailableClients" class="form-select">
                        </select>
                        <label asp-for="ClientId">Client</label>
                        <span asp-validation-for="ClientId" class="text-danger"></span>
                    </div>
                    <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Create User</button>                    <div class="mt-3">
                        <p>
                            <a asp-action="ManageUsers" class="btn btn-secondary">Back to User Management</a>
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let usernameCheckTimeout;
        
        $(document).ready(function() {
            $('#UserName').on('input', function() {
                const username = $(this).val();
                const $availability = $('#usernameAvailability');
                
                // Clear previous timeout
                clearTimeout(usernameCheckTimeout);
                
                // Clear message if empty
                if (!username) {
                    $availability.html('');
                    return;
                }
                
                // Set new timeout
                usernameCheckTimeout = setTimeout(function() {
                    $.get('/Auth/CheckUsername/' + encodeURIComponent(username))
                        .done(function(response) {
                            if (response.isAvailable) {
                                $availability.html('<span class="text-success">✓ Username is available</span>');
                            } else {
                                $availability.html('<span class="text-danger">✗ Username is already taken</span>');
                            }
                        })
                        .fail(function() {
                            $availability.html('<span class="text-danger">Error checking username availability</span>');
                        });
                }, 500); // Wait 500ms after last keypress
            });
        });
    </script>
}
